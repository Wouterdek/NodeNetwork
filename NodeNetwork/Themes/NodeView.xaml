<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:views="clr-namespace:NodeNetwork.Views"
                    xmlns:controls="clr-namespace:NodeNetwork.Views.Controls"
                    xmlns:viewModels="clr-namespace:NodeNetwork.ViewModels"
                    xmlns:reactiveUi="http://reactiveui.net">
    <Style TargetType="{x:Type views:NodeView}">
        <Setter Property="Background" Value="#5D9CEC"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="TitleFontFamily" Value="Segoe WP Semibold"/>
        <Setter Property="TitleFontSize" Value="20"/>
        <Setter Property="BorderBrush" Value="Orange"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="ArrowSize" Value="20"/>
        <Setter Property="EndpointsStackingOrientation" Value="Vertical"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="views:NodeView">
                    <controls:FillPanel x:Name="Container">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="SelectedVisualStatesGroup">
                                <VisualState Name="SelectedState">
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0" To="-3" 
                                                            Storyboard.TargetName="Container" Storyboard.TargetProperty="Margin"/>
                                        <ThicknessAnimation Duration="0" To="3" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness"/>
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="UnselectedState">
                                    <Storyboard>
                                        <ThicknessAnimation Duration="0" To="0" Storyboard.TargetName="Container" Storyboard.TargetProperty="Margin"/>
                                        <ThicknessAnimation Duration="0" To="0" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderThickness"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="Border" Margin="10,0,10,0" CornerRadius="{TemplateBinding CornerRadius}"
                                MinWidth="100" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <controls:ArrowToggleButton x:Name="CollapseButton" Width="{TemplateBinding ArrowSize}" Height="{TemplateBinding ArrowSize}" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="10,10,0,10"/>
                                    <TextBlock x:Name="NameLabel" TextWrapping="Wrap" Background="Transparent" Foreground="{TemplateBinding Foreground}" VerticalAlignment="Center" TextAlignment="Center"
                                               FontFamily="{TemplateBinding TitleFontFamily}" FontSize="{TemplateBinding TitleFontSize}" Margin="10,10,20,10"/>
                                </StackPanel>

                                <ContentPresenter x:Name="LeadingControlPresenter" Style="{TemplateBinding LeadingControlPresenterStyle}"/>

                                <DockPanel>
                                    <ItemsControl x:Name="InputsList" IsTabStop="False">
                                        <ItemsControl.Style>
                                            <Style TargetType="ItemsControl">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=EndpointsStackingOrientation, RelativeSource={RelativeSource AncestorType={x:Type views:NodeView}}}" Value="Vertical">
                                                        <Setter Property="DockPanel.Dock" Value="Top"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=EndpointsStackingOrientation, RelativeSource={RelativeSource AncestorType={x:Type views:NodeView}}}" Value="Horizontal">
                                                        <Setter Property="DockPanel.Dock" Value="Left"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ItemsControl.Style>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="viewModels:NodeInputViewModel">
                                                <reactiveUi:ViewModelViewHost ViewModel="{Binding}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False"/>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                    <ItemsControl x:Name="OutputsList" IsTabStop="False">
                                        <ItemsControl.Style>
                                            <Style TargetType="ItemsControl">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=EndpointsStackingOrientation, RelativeSource={RelativeSource AncestorType={x:Type views:NodeView}}}" Value="Vertical">
                                                        <Setter Property="DockPanel.Dock" Value="Bottom"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Path=EndpointsStackingOrientation, RelativeSource={RelativeSource AncestorType={x:Type views:NodeView}}}" Value="Horizontal">
                                                        <Setter Property="DockPanel.Dock" Value="Right"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ItemsControl.Style>
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate DataType="viewModels:NodeOutputViewModel">
                                                <reactiveUi:ViewModelViewHost ViewModel="{Binding}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" IsTabStop="False"/>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </DockPanel>

                                <ContentPresenter x:Name="TrailingControlPresenter" Style="{TemplateBinding TrailingControlPresenterStyle}"/>

                                <Canvas Width="auto" Height="10"/>
                            </StackPanel>
                        </Border>
                    </controls:FillPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>